services:
  nast-server:
    image: nats:latest
    ports:
      - 8222:8222

  client-gateway:
    build: ./client-gateway
    restart: always
    develop:
      watch:
        - action: sync
          path: ./client-gateway/src
          target: /usr/src/app/src
          ignore:
            - node_modules
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    command: npm run start:dev
    # volumes:
    #   - ./client-gateway/src:/usr/src/app/src
    #   - /usr/src/app/node_modules
    environment:
      - PORT=3000
      - NATS_SERVERS=nats://nast-server:4222

  products-ms:
    build: ./products-ms
    develop:
      watch:
        - action: sync
          path: ./products-ms/src
          target: /usr/src/app/src
          ignore:
            - node_modules
    command: npm run start:dev
    # volumes:
    #   - ./products-ms/src:/usr/src/app/src
    #   - /usr/src/app/node_modules
    environment:
      - PORT=3001
      - NATS_SERVERS=nats://nast-server:4222
      - DATABASE_URL=file:./dev.db

  orders-ms:
    depends_on:
      - orders-db
    build: ./orders-ms
    develop:
      watch:
        - action: sync
          path: ./orders-ms/src
          target: /usr/src/app/src
          ignore:
            - node_modules
    command: npm run start:dev
    # volumes:
    #   - ./orders-ms/src:/usr/src/app/src
    #   - /usr/src/app/node_modules
    environment:
      - PORT=3002
      - NATS_SERVERS=nats://nast-server:4222
      - DATABASE_URL=postgresql://postgres:123456@orders-db:5432/ordersdb?schema=public

  orders-db:
    container_name: orders_database
    image: postgres:16.2
    restart: always
    volumes:
      - ./postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=ordersdb
